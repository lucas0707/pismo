/*
 * This file is generated by jOOQ.
 */
package com.transactions.db;


import com.transactions.db.tables.Accounts;
import com.transactions.db.tables.FlywaySchemaHistory;
import com.transactions.db.tables.Transactions;
import com.transactions.db.tables.records.AccountsRecord;
import com.transactions.db.tables.records.FlywaySchemaHistoryRecord;
import com.transactions.db.tables.records.TransactionsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountsRecord> ACCOUNTS_DOCUMENT_NUMBER_KEY = Internal.createUniqueKey(Accounts.ACCOUNTS, DSL.name("accounts_document_number_key"), new TableField[] { Accounts.ACCOUNTS.DOCUMENT_NUMBER }, true);
    public static final UniqueKey<AccountsRecord> ACCOUNTS_PKEY = Internal.createUniqueKey(Accounts.ACCOUNTS, DSL.name("accounts_pkey"), new TableField[] { Accounts.ACCOUNTS.ACCOUNT_ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<TransactionsRecord> PK_TRANSACTIONS = Internal.createUniqueKey(Transactions.TRANSACTIONS, DSL.name("pk_transactions"), new TableField[] { Transactions.TRANSACTIONS.TRANSACTION_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<TransactionsRecord, AccountsRecord> TRANSACTIONS__FK_ACCOUNT = Internal.createForeignKey(Transactions.TRANSACTIONS, DSL.name("fk_account"), new TableField[] { Transactions.TRANSACTIONS.ACCOUNT_ID }, Keys.ACCOUNTS_PKEY, new TableField[] { Accounts.ACCOUNTS.ACCOUNT_ID }, true);
}
