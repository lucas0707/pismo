/*
 * This file is generated by jOOQ.
 */
package com.transactions.db.tables.records;


import com.transactions.db.tables.Revinfo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RevinfoRecord extends UpdatableRecordImpl<RevinfoRecord> implements Record1<Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.revinfo.id</code>.
     */
    public RevinfoRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.revinfo.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row1<Long> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    @Override
    public Row1<Long> valuesRow() {
        return (Row1) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Revinfo.REVINFO.ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public RevinfoRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RevinfoRecord values(Long value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RevinfoRecord
     */
    public RevinfoRecord() {
        super(Revinfo.REVINFO);
    }

    /**
     * Create a detached, initialised RevinfoRecord
     */
    public RevinfoRecord(Long id) {
        super(Revinfo.REVINFO);

        setId(id);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RevinfoRecord
     */
    public RevinfoRecord(com.transactions.db.tables.pojos.Revinfo value) {
        super(Revinfo.REVINFO);

        if (value != null) {
            setId(value.getId());
            resetChangedOnNotNull();
        }
    }
}
