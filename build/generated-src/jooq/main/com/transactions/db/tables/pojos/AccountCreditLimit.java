/*
 * This file is generated by jOOQ.
 */
package com.transactions.db.tables.pojos;


import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountCreditLimit implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final UUID accountId;
    private final String availablecreditlimit;
    private final String transactionaggregate;

    public AccountCreditLimit(AccountCreditLimit value) {
        this.id = value.id;
        this.accountId = value.accountId;
        this.availablecreditlimit = value.availablecreditlimit;
        this.transactionaggregate = value.transactionaggregate;
    }

    public AccountCreditLimit(
        UUID id,
        UUID accountId,
        String availablecreditlimit,
        String transactionaggregate
    ) {
        this.id = id;
        this.accountId = accountId;
        this.availablecreditlimit = availablecreditlimit;
        this.transactionaggregate = transactionaggregate;
    }

    /**
     * Getter for <code>public.account_credit_limit.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.account_credit_limit.account_id</code>.
     */
    public UUID getAccountId() {
        return this.accountId;
    }

    /**
     * Getter for <code>public.account_credit_limit.availablecreditlimit</code>.
     */
    public String getAvailablecreditlimit() {
        return this.availablecreditlimit;
    }

    /**
     * Getter for <code>public.account_credit_limit.transactionaggregate</code>.
     */
    public String getTransactionaggregate() {
        return this.transactionaggregate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final AccountCreditLimit other = (AccountCreditLimit) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.accountId == null) {
            if (other.accountId != null)
                return false;
        }
        else if (!this.accountId.equals(other.accountId))
            return false;
        if (this.availablecreditlimit == null) {
            if (other.availablecreditlimit != null)
                return false;
        }
        else if (!this.availablecreditlimit.equals(other.availablecreditlimit))
            return false;
        if (this.transactionaggregate == null) {
            if (other.transactionaggregate != null)
                return false;
        }
        else if (!this.transactionaggregate.equals(other.transactionaggregate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.accountId == null) ? 0 : this.accountId.hashCode());
        result = prime * result + ((this.availablecreditlimit == null) ? 0 : this.availablecreditlimit.hashCode());
        result = prime * result + ((this.transactionaggregate == null) ? 0 : this.transactionaggregate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AccountCreditLimit (");

        sb.append(id);
        sb.append(", ").append(accountId);
        sb.append(", ").append(availablecreditlimit);
        sb.append(", ").append(transactionaggregate);

        sb.append(")");
        return sb.toString();
    }
}
